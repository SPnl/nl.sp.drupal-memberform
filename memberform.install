<?php

/**
 * @file Creates database table to store memberform values.
 */

/**
 * Implements hook_schema().
 */
function memberform_schema() {
  $schema['memberform_storage'] = array(
    'description' => 'Stores memberform storage.',
    'fields' => array(
      'sid' => array(
        'description' => 'Submission id.',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'form_values' => array(
        'description' => 'The form storage (json encoded).',
        'type' => 'blob',
        'size' => 'normal',
      ),
    ),
    'primary key' => array(
      'sid',
    ),
  );

  $schema['memberform_submissions'] = array(
    'fields'      => array(
      'id'                   => array(
        'type' => 'serial',
      ),
      'membership_type'      => array(
        'type'     => 'varchar',
        'length'   => 10,
        'nullable' => FALSE,
        'default'  => 'lid_sp',
      ),
      'hash'                 => array(
        'type'   => 'varchar',
        'length' => 32,
      ),
      'initials'             => array(
        'type'   => 'varchar',
        'length' => 15,
      ),
      'firstname'            => array(
        'type'   => 'varchar',
        'length' => 150,
      ),
      'middlename'           => array(
        'type'   => 'varchar',
        'length' => 20,
      ),
      'lastname'             => array(
        'type'   => 'varchar',
        'length' => 150,
      ),
      'gender'               => array(
        'type'   => 'varchar',
        'length' => 1,
      ),
      'birthdate'            => array(
        'type'   => 'varchar',
        'length' => 20,
      ),
      'email'                => array(
        'type'   => 'varchar',
        'length' => 120,
      ),
      'phone'                => array(
        'type'   => 'varchar',
        'length' => 25,
      ),
      'phone_mobile'         => array(
        'type'   => 'varchar',
        'length' => 25,
      ),
      'country'              => array(
        'type'   => 'varchar',
        'length' => 100,
      ),
      'zipcode'              => array(
        'type'   => 'varchar',
        'length' => 20,
      ),
      'housenumber'          => array(
        'type'   => 'varchar',
        'length' => 10,
      ),
      'housenumber_suffix'   => array(
        'type'   => 'varchar',
        'length' => 20,
      ),
      'street'               => array(
        'type'   => 'varchar',
        'length' => 200,
      ),
      'city'                 => array(
        'type'   => 'varchar',
        'length' => 200,
      ),
      'contribution'         => array(
        'type'   => 'numeric',
        'precision' => 8,
        'scale' => 2,
      ),
      'bank_account'         => array(
        'type'   => 'varchar',
        'length' => 32,
      ),
      'payment_method'       => array(
        'type'   => 'varchar',
        'length' => 20,
      ),
      'welcome_present_sp'   => array(
        'type'   => 'varchar',
        'length' => 20,
      ),
      'welcome_present_rood' => array(
        'type'   => 'varchar',
        'length' => 20,
      ),
      'source'   => array(
        'type'   => 'varchar',
        'length' => 100,
      ),
      'created'              => array(
        'type'     => 'int',
        'size'   => 'big',
        'nullable' => FALSE,
      ),
      'verified'             => array(
        'type'     => 'int',
        'size'   => 'big',
        'nullable' => TRUE,
      ),
      'reminded'             => array(
        'type'     => 'int',
        'size'   => 'big',
        'nullable' => TRUE,
      ),
      'submitted'            => array(
        'type'     => 'int',
        'size'   => 'big',
        'nullable' => TRUE,
      ),
      'verification_type' => array(
        'type' => 'text',
        'not null' => FALSE,
      ),
      'errormsg'             => array(
        'type'     => 'text',
        'nullable' => TRUE,
      ),
      'flags'             => array(
        'type'     => 'text',
        'nullable' => TRUE,
      ),
      'contact_id'           => array(
        'type'     => 'int',
        'size'   => 'big',
        'nullable' => TRUE,
      ),
      'note' => array(
        'type' => 'text',
        'not null' => FALSE,
        'description' => 'A note to store in CiviCRM.',
      ),
      'form' => array(
        'type' => 'text',
        'not null' => FALSE,
      ),
      'form_page' => array(
        'type' => 'text',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['memberform_gifts'] = array(
    'fields'      => array(
      'id'              => array(
        'type' => 'serial',
      ),
      'membership_type' => array(
        'type'     => 'varchar',
        'length'   => 10,
        'nullable' => FALSE,
        'default'  => 'lid_sp',
      ),
      'internal_name'   => array(
        'type'   => 'varchar',
        'length' => 150,
      ),
      'name'            => array(
        'type'   => 'varchar',
        'length' => 150,
      ),
      'image' => array(
        'type' => 'int',
        'size' => 'normal',
      ),
      'position'        => array(
        'type'   => 'int',
        'size' => 'big',
      ),
      'show_website'     => array(
        'type'   => 'int',
        'size' => 'tiny',
        'nullable' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Add memberform table.
 */
function memberform_update_7001() {
  $schema = memberform_schema();
  $table = $schema['memberform_storage'];
  db_create_table('memberform_storage', $table);
}

/**
 * Add admin tables.
 */
function memberform_update_7002() {
  $schema = memberform_schema();

  $table = $schema['memberform_submissions'];
  db_create_table('memberform_submissions', $table);

  $table = $schema['memberform_gifts'];
  db_create_table('memberform_gifts', $table);
}

/**
 * Adds image to memberform_gifts table, note to memverform_submissions table.
 */
function memberform_update_7003() {
  $schema = memberform_schema();
  $spec = $schema['memberform_gifts']['fields']['image'];
  db_add_field('memberform_gifts', 'image', $spec);
  $spec = $schema['memberform_submissions']['fields']['note'];
  db_add_field('memberform_submissions', 'note', $spec);
}

/**
 * Adds form_page field and confirmation_type field to memberfrom_submissions.
 */
function memberform_update_7004() {
  $schema = memberform_schema();
  $spec = $schema['memberform_submissions']['fields']['form_page'];
  db_add_field('memberform_submissions', 'form_page', $spec);
  $spec = $schema['memberform_submissions']['fields']['confirmation_type'];
  db_add_field('memberform_submissions', 'confirmation_type', $spec);
}

/**
 * Adds form field to memberfrom_submissions table.
 */
function memberform_update_7005() {
  $schema = memberform_schema();
  $spec = $schema['memberform_submissions']['fields']['form'];
  db_add_field('memberform_submissions', 'form', $spec);
}

/**
 * Removes hash column form memberform_storage table.
 */
function memberform_update_7006() {
  db_drop_field('memberform_storage', 'hash');
}

/**
 * Imports data from sp_aanmelden module, and disables it.
 */
function memberform_update_7007() {
  if (module_exists('spaanmelden')) {
    $query = "INSERT INTO {memberform_submissions} (membership_type, hash, initials, firstname, middlename, lastname, gender, birthdate, email, phone, phone_mobile, country, zipcode, housenumber, housenumber_suffix, street, city, contribution, bank_account, payment_method, welcome_present_sp, welcome_present_rood, source, created, verified, reminded, submitted, errormsg, flags, contact_id, note) SELECT membership_type, hash, initials, firstname, middlename, lastname, gender, birthdate, email, phone, phone_mobile, country, zipcode, housenumber, housenumber_suffix, street, city, contribution, bank_account, payment_method, welcome_present_sp, welcome_present_rood, source, created, verified, reminded, submitted, errormsg, flags, contact_id, note FROM {sp_aanmeldingen}";
    $result = db_query($query);

    $query = "INSERT INTO {memberform_gifts} (membership_type, internal_name, name, position, show_website) SELECT membership_type, internal_name, name, position, show_website FROM {sp_aanmeldingen_gifts}";
    $result = db_query($query);
    module_disable(array('spaanmelden'));
  }
}
